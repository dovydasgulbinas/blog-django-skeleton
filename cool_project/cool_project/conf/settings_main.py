"""
Django settings for cool_project project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import io
import configparser

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
SECTION = 'test'  # when using production then SECTION = 'prod'

# we create a base directory 2 parent directories UP.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# we need to go one dir up because our settings file in one folder deeper than default
BASE_DIR = os.path.dirname(os.path.dirname(BASE_DIR))
SECRETS_DIR = os.path.join(BASE_DIR, '.secrets')
SECRETS_FILE_PATH = os.path.join(SECRETS_DIR, 'secrets.ini')
LOGS_DIR = os.path.join(BASE_DIR, 'logs')
LOG_MAIN = os.path.join(LOGS_DIR, 'django_main.log')

CONF = configparser.ConfigParser()
CONF.read(SECRETS_FILE_PATH)
# this is a magic line, because based on what value SECTION= holds we will
# able to choose our settings in this case test OR prod
SECRETS = CONF[SECTION]

# we grab our `secret_key` from our `secrets.ini` file
SECRET_KEY = SECRETS['secret_key']

# Let's add basic logging to file.

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,

    # you can have as many formatter you want.  assign different formatters to
    # different handlers

    'formatters': {
        'simple': {
            'format': '%(asctime)s - %(levelname)s - %(message)s'
        },
        'multi': {
            'format': '(%(threadName)-10s) %(asctime)s %(levelname)s: %(message)s'
        },
    },

    'handlers': {
        'applogfile': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_MAIN,
            'formatter': 'multi',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'multi',
        },
    },
    # every django app you create will have to have their logger set. set them
    # here in the 'loggers' object. loggers['django'] is the name of our project
    # leave it as is.
    'loggers': {
        'django': {
            'handlers': ['applogfile', 'console'],
            'level': 'DEBUG',
        },

    },
}


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cool_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cool_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
